name: Generate Cordova APK
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
  buildArtifact:
    name: Build Artifact
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.4.0'
    - name: Install NPM
      run: npm install
    - name: Install Quasar
      run: npm install -g @quasar/cli
    - name: Quasar Version
      run: quasar -v
    - name: Install Cordova
      run: npm install -g cordova
    - name: Cordova Version
      run: cordova -v
    - name: Quasar Build for Cordova
      run: quasar build -m cordova -T android
    - name: Build Cordova
      run: |
        cordova platform remove android
        cordova platform add android
        cordova build android
      working-directory: ./src-cordova
    - name: Upload Artifact for Job Push Artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: ${{ github.workspace }}/src-cordova/platforms/android/app/build/outputs/apk/debug/app-debug.apk
      
  pushArtifact:
    name: Push Artifact
    needs: buildArtifact
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact for Job Push Artifact
        uses: actions/download-artifact@v1
        with:
          name: artifact
      - name: Move to Output Directory
        run: |
          mkdir -p output
          yes| cp -rf artifact/app-debug.apk ./output/
      - name: Commit Files
        run: |
          git config --local user.email "bahr.emanuel@gmail.com"
          git config --local user.name "Phantomkeks"
          git add ./output
          git commit -m "Create APK File"
      - name: Push changes # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
